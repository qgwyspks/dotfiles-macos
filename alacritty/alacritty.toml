# https://alacritty.org/config-alacritty.html
[general]
live_config_reload = true    # 实时配置重新加载

[window]
dimensions = { columns = 74, lines = 24 }  # 窗口尺寸(终端中的行/列数)
padding = { x = 16, y = 20 }               # 窗口周围添加的空白区域
decorations = "transparent"                # 窗口装饰 - 透明(macOS)
dynamic_padding = true                     # 动态填充
dynamic_title = true                       # 动态标题，允许终端应用更改窗口标题
opacity = 0.82                             # 背景不透明度
blur = false                               # 透明窗口后面的内容不进行模糊处理
option_as_alt = "None"                     # Option(Macos) -> Alt -> OnlyLeft | OnlyRight| Both | None
level = "Normal"                           # 窗口优先级 AlwaysOnTop(最上面)

[scrolling]
history = 2500  # 回滚缓冲区的最大行数
multiplier = 3  # 每个输入滚动增量滚动的行数

[font]
size        = 15.6  # 14.6
normal      = { family = "Maple Mono NF CN", style = "Light"       }
bold        = { family = "Maple Mono NF CN", style = "Bold"        }
italic      = { family = "Maple Mono NF CN", style = "Light Italic" }
bold_italic = { family = "Maple Mono NF CN", style = "Bold Italic"  }
offset = { x = 0, y = 2 }  # 每个字符周围的额外空间, x -> 字母间距, y -> 行距

[selection]
semantic_escape_chars = ",│`|:\"' ()[]{}<>\t"  # 语义转义字符
save_to_clipboard = true                       # 保存到剪贴板

[cursor]
style = { shape = "Beam", blinking = "Always" }  # 光标样式
unfocused_hollow = true                          # 窗口未聚焦时，光标将呈现为空心框

[mouse]
bindings = [
    { mouse = "Middle", action= "Pasteselection"},
]

[keyboard]
# Command -> Ctrl
# Option  -> Alt
# Control
# Tmux Prefix -> ` -> \u0060
bindings = [
    { key = "V",          mods = "Command",       action = "Paste"                 },  # Command V            -> 粘贴
    { key = "C",          mods = "Command",       action = "Copy"                  },  # Command C            -> 复制
    { key = "Q",          mods = "Command",       action = "Quit"                  },  # Command Q            -> 退出 Alacritty
    { key = "W",          mods = "Command",       action = "Hide"                  },  # Command W            -> 隐藏
    { key = "T",          mods = "Command",       action = "CreateNewWindow"       },  # Command T            -> 创建新窗口
    { key = "Return",     mods = "Command",       action = "ToggleMaximized"       },  # Command Return       -> 最大化
    { key = "Return" ,    mods = "Command|Shift", action = "ToggleSimpleFullscreen"},  # Command Shift Return -> 进入全屏而不占用其他空间(macOS)
    { key = "W",          mods = "Command|Shift", action = "HideOtherApplications" },  # Command Shift W      -> 隐藏其他应用程序(macOS)
    { key = "T",          mods = "Command|Shift", action = "CreateNewTab"          },  # Command Shift T      -> 创建新选项卡(macOS)
    { key = "LBracket",   mods = "Command|Shift", action = "SelectPreviousTab"     },  # Command Shift [      -> 选择上一个选项卡(macOS)
    { key = "RBracket",   mods = "Command|Shift", action = "SelectNextTab"         },  # Command Shift ]      -> 选择下一个选项卡(macOS)
    { key = "ArrowLeft",  mods = "Command",       chars = "\u0001"                 },  # Command Left         -> Ctrl-a -> 光标移动到行首
    { key = "ArrowRight", mods = "Command",       chars = "\u0005"                 },  # Command Right        -> Ctrl-e -> 光标移动到行尾
    { key = "ArrowUp",    mods = "Command",       chars = "\u0010"                 },  # Command Up           -> Ctrl-p -> 向上浏览一条命令
    { key = "ArrowDown",  mods = "Command",       chars = "\u000E"                 },  # Command Down         -> Ctrl-n -> 向下浏览一条命令
    { key = "Back",       mods = "Command",       chars = "\u0015"                 },  # Command Back         -> Ctrl-u -> 清除整行
    { key = "N",          mods = "Command",       chars = "\u0060c"                },  # Command N            -> ` c    -> tmux new-window
    { key = "LBracket",   mods = "Command",       chars = "\u0060p"                },  # Command [            -> ` p    -> tmux previous-window
    { key = "RBracket",   mods = "Command",       chars = "\u0060n"                },  # Command ]            -> ` n    -> tmux next-window
    { key = "X",          mods = "Command",       chars = "\u0060x"                },  # Command X            -> ` x    -> tmux kill-pane
    { key = "D",          mods = "Command",       chars = "\u0060d"                },  # Command D            -> ` d    -> tmux detach
    { key = "/",          mods = "Command",       chars = "\u0060?"                },  # Command /            -> ` ?    -> tmux list-keys
    { key = "\\",         mods = "Command",       chars = "\u0060\\"               },  # Command \            -> ` \    -> tmux split-window -h
    { key = "-",          mods = "Command",       chars = "\u0060-"                },  # Command -            -> ` -    -> tmux split-window -v
    { key = "Key1",       mods = "Command",       chars = "\u00601"                },  # Command 1            -> ` 1    -> tmux select-window -t 1
    { key = "Key2",       mods = "Command",       chars = "\u00602"                },  # Command 2            -> ` 2    -> tmux select-window -t 2
    { key = "Key3",       mods = "Command",       chars = "\u00603"                },
    { key = "Key4",       mods = "Command",       chars = "\u00604"                },
    { key = "Key5",       mods = "Command",       chars = "\u00605"                },
    { key = "Key6",       mods = "Command",       chars = "\u00606"                },
    { key = "Key7",       mods = "Command",       chars = "\u00607"                },
    { key = "Key8",       mods = "Command",       chars = "\u00608"                },
    { key = "Key9",       mods = "Command",       chars = "\u00609"                },
]
# Tmux Cheatsheet
# s -> 列出所有会话
# $ -> 重命名当前对话
# c -> 创建新窗口
# w -> 列出所有窗口
# n -> 后一个窗口
# p -> 前一个窗口
# f -> 查找窗口
# , -> 重命名当前窗口
# & -> 关闭当前窗口
# % -> 垂直分割
# " -> 水平分割
# o -> 交换窗格
# x -> 关闭窗格
#   -> 切换布局
# q -> 显示窗格是第几个
# { -> 与上一个窗格交换位置
# } -> 与下一个窗格交换位置
# z -> 切换窗格最大化/最小化
# d -> 退出 tmux（仍在后台）
# t -> 窗口中央显示一个数字时钟
# ? -> 列出所有快捷键
# : -> 命令提示符
